<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Boat.Equipment.Title" xml:space="preserve">
    <value>Equipment</value>
  </data>
  <data name="Boat.Icon.Autopilot" xml:space="preserve">
    <value>Autopilot</value>
  </data>
  <data name="Boat.Icon.Engine" xml:space="preserve">
    <value>VP MD22A 48HK</value>
  </data>
  <data name="Boat.Icon.Fire" xml:space="preserve">
    <value>5 fire extinguishers</value>
  </data>
  <data name="Boat.Icon.Fishing" xml:space="preserve">
    <value>Deep sea fishing rod</value>
  </data>
  <data name="Boat.Icon.Freezer" xml:space="preserve">
    <value>Freezer 30L</value>
  </data>
  <data name="Boat.Icon.Fridge" xml:space="preserve">
    <value>Fridge 50L</value>
  </data>
  <data name="Boat.Icon.Grill" xml:space="preserve">
    <value>BBQ Grill</value>
  </data>
  <data name="Boat.Icon.Inflatable" xml:space="preserve">
    <value>Dinghie with motor</value>
  </data>
  <data name="Boat.Icon.LifeRaft" xml:space="preserve">
    <value>Life raft 8 people</value>
  </data>
  <data name="Boat.Icon.Map" xml:space="preserve">
    <value>Plotter</value>
  </data>
  <data name="Boat.Icon.Radar" xml:space="preserve">
    <value>Radar</value>
  </data>
  <data name="Boat.Icon.Signal" xml:space="preserve">
    <value>AIS T/R</value>
  </data>
  <data name="Boat.Icon.Solar" xml:space="preserve">
    <value>300 W solar panels</value>
  </data>
  <data name="Boat.Interior.Text" xml:space="preserve">
    <value>Divine has well-disposed space inside with 10 beds divided into 5 cabins, with a salon that can fit about 8-10 people. It also has two toilets and a passage between the two cockpits.</value>
  </data>
  <data name="Boat.Interior.Title" xml:space="preserve">
    <value>Interior</value>
  </data>
  <data name="Boat.Layout.Text" xml:space="preserve">
    <value>Below we can see the different rooms inside of the boat. with Cabins (C), toilets (WC), kitchen (K) and salon (S).</value>
  </data>
  <data name="Boat.Layout.Title" xml:space="preserve">
    <value>Layout</value>
  </data>
  <data name="Boat.Overlap.Text" xml:space="preserve">
    <value>&lt;p&gt;Here you can find information about the boat: &lt;/br&gt;&lt;/br&gt; - Equipment &lt;/br&gt; - Interior &lt;/br&gt; - Layout&lt;/p&gt;</value>
  </data>
  <data name="Boat.Overlap.Title" xml:space="preserve">
    <value>Content</value>
  </data>
  <data name="Boat.Subtitle" xml:space="preserve">
    <value>The swedish pearl</value>
  </data>
  <data name="Boat.Title" xml:space="preserve">
    <value>Diva 451</value>
  </data>
  <data name="ContactUs.Text" xml:space="preserve">
    <value>Do you want to sail, or maybe just have a chat with us? Go to our &lt;a style="font-weight: bold" href="https://www.instagram.com/sailwithdivine/" target="_blank"&gt;Instagram page&lt;/a&gt;
    and write us a message!</value>
  </data>
  <data name="ContactUs.Title" xml:space="preserve">
    <value>Contact us</value>
  </data>
  <data name="Cookiebanner.Text" xml:space="preserve">
    <value>We are using cookies to ensure the best user experience on our site. Click on the ok-button to accept the use of cookies while navigating on our site.</value>
  </data>
  <data name="Crew.Title" xml:space="preserve">
    <value>Meet the sailors!</value>
  </data>
  <data name="Header.Country.en-US" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="Header.Country.sv-SE" xml:space="preserve">
    <value>Svenska</value>
  </data>
  <data name="Home.Countdown.Crossing" xml:space="preserve">
    <value>Crossing now!</value>
  </data>
  <data name="Home.Countdown.Days" xml:space="preserve">
    <value>Days!</value>
  </data>
  <data name="Home.Countdown.Title" xml:space="preserve">
    <value>Atlantic crossing in...</value>
  </data>
  <data name="Home.Icon.ContactUs" xml:space="preserve">
    <value>Contact us</value>
  </data>
  <data name="Home.Icon.Crew" xml:space="preserve">
    <value>Crew</value>
  </data>
  <data name="Home.Icon.Instagram" xml:space="preserve">
    <value>Instagram</value>
  </data>
  <data name="Home.Icon.Ship" xml:space="preserve">
    <value>Ship</value>
  </data>
  <data name="Home.Position.Button" xml:space="preserve">
    <value>See position</value>
  </data>
  <data name="Home.Position.Text" xml:space="preserve">
    <value>We are using an AIS transponder and reciver, which makes it possible to see our latest registered position when connected to a base station. It also makes it easier when sailing becuase we are able to see other boats with AIS and they see us.</value>
  </data>
  <data name="Position.Subtitle" xml:space="preserve">
    <value>Zoom out on the map and look for a pink dot that says Divine</value>
  </data>
  <data name="Position.Title" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="SailWithUs.Hero.Title" xml:space="preserve">
    <value>Sail with us!</value>
  </data>
  <data name="SailWithUs.Section1.Text" xml:space="preserve">
    <value>Är du trött på hösten i Sverige och sugen på att följa med oss på vårt äventyr? Vi söker dig som vill segla med oss! Vår grundidé är att segla med människor med olika bakgrund för att få lite nya perspektiv på hur kulturen och klimaten är i andra länder.
Det är bra om du har tidigare erfarenhet av segling men det är absolut inget krav. Vi söker dig som är social och anpassningsbar efter de begränsningar som finns på en båt som tex brist på sötvatten, internet, el och egentid. Då vi bor tätt tillsammans på båten är det absolut viktigaste att alla trivs tillsammans. Oftast delar man hytt, antingen i våningshytt eller i dubbelsäng beroende på hur bekväm man känner sig med sällskapet.</value>
  </data>
  <data name="SailWithUs.Section1.Title" xml:space="preserve">
    <value>Vill du segla med oss?</value>
  </data>
  <data name="SailWithUs.Section2.Text" xml:space="preserve">
    <value>På båten använder vi oss av paying crew vilket betyder att man är en del i crewet och hjälper till med att lägga loss, att segla, laga mat och att städa. Vi tar även en avgift, en ”båthyra”, per dygn som ska motsvara vad det kostar att bo på tex ett vandrarhem i Australien eller liknande.
Förutom båthyran delar alla på båten på hamnavgift, dieselkostnader samt matkostnader, vilket vi köper in tillsamman. 
Kostnaden per dag varierar beroende på hur länge man har tänkt att segla med oss.</value>
  </data>
  <data name="SailWithUs.Section2.Title" xml:space="preserve">
    <value>Paying crew</value>
  </data>
  <data name="SailWithUs.Section3.Text" xml:space="preserve">
    <value>Vi heter Totte och Oscar och är två barndomsvänner som kände att det var dags att prova på något nytt, så vi köpte en segelbåt. Vi hittade vår Diva 451 som känns som den optimala båten för en segling som denna. Båten är 45 fot lång och har fem kabiner, vilket gör att vi har en del utrymme för att få med oss gäster och vänner på vårt äventyr. Totte är utbildad dataingenjör och jobbar med programmering medan Oscar har jobbat som charterskeppare de senaste åren.</value>
  </data>
  <data name="SailWithUs.Section3.Title" xml:space="preserve">
    <value>Om oss</value>
  </data>
</root>